plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'com.weatherfairy'
version = '0.0.2-SNAPSHOT'

java {
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // validation annotation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //mybatis
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    //webclient
    implementation 'org.springframework.boot:spring-boot-starter-webflux:2.7.0'

    //json
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // firebase
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // 이미지 압축 관련 라이브러리
    implementation 'net.coobird:thumbnailator:0.4.8'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.sejda.imageio:webp-imageio:0.1.6'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //jwt
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    // java mail sender
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'io.lettuce:lettuce-core:6.2.1.RELEASE'

    //thymeleaf
    implementation'org.springframework.boot:spring-boot-starter-thymeleaf'

    // 이미지 리사이징 을 위한 라이브러리
    implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'

}

def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}


tasks.named('test') {
    useJUnitPlatform()
}
kotlin {
    jvmToolchain(17)
}
